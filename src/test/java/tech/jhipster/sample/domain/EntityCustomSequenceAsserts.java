package tech.jhipster.sample.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EntityCustomSequenceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityCustomSequenceAllPropertiesEquals(EntityCustomSequence expected, EntityCustomSequence actual) {
        assertEntityCustomSequenceAutoGeneratedPropertiesEquals(expected, actual);
        assertEntityCustomSequenceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityCustomSequenceAllUpdatablePropertiesEquals(EntityCustomSequence expected, EntityCustomSequence actual) {
        assertEntityCustomSequenceUpdatableFieldsEquals(expected, actual);
        assertEntityCustomSequenceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityCustomSequenceAutoGeneratedPropertiesEquals(EntityCustomSequence expected, EntityCustomSequence actual) {
        assertThat(actual)
            .as("Verify EntityCustomSequence auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityCustomSequenceUpdatableFieldsEquals(EntityCustomSequence expected, EntityCustomSequence actual) {
        assertThat(actual)
            .as("Verify EntityCustomSequence relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityCustomSequenceUpdatableRelationshipsEquals(EntityCustomSequence expected, EntityCustomSequence actual) {
        // empty method
    }
}
