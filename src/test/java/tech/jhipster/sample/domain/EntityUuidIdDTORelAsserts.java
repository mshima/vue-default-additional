package tech.jhipster.sample.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EntityUuidIdDTORelAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityUuidIdDTORelAllPropertiesEquals(EntityUuidIdDTORel expected, EntityUuidIdDTORel actual) {
        assertEntityUuidIdDTORelAutoGeneratedPropertiesEquals(expected, actual);
        assertEntityUuidIdDTORelAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityUuidIdDTORelAllUpdatablePropertiesEquals(EntityUuidIdDTORel expected, EntityUuidIdDTORel actual) {
        assertEntityUuidIdDTORelUpdatableFieldsEquals(expected, actual);
        assertEntityUuidIdDTORelUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityUuidIdDTORelAutoGeneratedPropertiesEquals(EntityUuidIdDTORel expected, EntityUuidIdDTORel actual) {
        assertThat(actual)
            .as("Verify EntityUuidIdDTORel auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityUuidIdDTORelUpdatableFieldsEquals(EntityUuidIdDTORel expected, EntityUuidIdDTORel actual) {
        // empty method

    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEntityUuidIdDTORelUpdatableRelationshipsEquals(EntityUuidIdDTORel expected, EntityUuidIdDTORel actual) {
        assertThat(actual)
            .as("Verify EntityUuidIdDTORel relationships")
            .satisfies(a -> assertThat(a.getOneToOne()).as("check oneToOne").isEqualTo(expected.getOneToOne()))
            .satisfies(a -> assertThat(a.getOneToOneMapsId()).as("check oneToOneMapsId").isEqualTo(expected.getOneToOneMapsId()))
            .satisfies(a -> assertThat(a.getManyToOne()).as("check manyToOne").isEqualTo(expected.getManyToOne()))
            .satisfies(a -> assertThat(a.getManyToOneMapsId()).as("check manyToOneMapsId").isEqualTo(expected.getManyToOneMapsId()))
            .satisfies(a -> assertThat(a.getManyToManies()).as("check manyToManies").isEqualTo(expected.getManyToManies()))
            .satisfies(a -> assertThat(a.getManyToManyMapsIds()).as("check manyToManyMapsIds").isEqualTo(expected.getManyToManyMapsIds()));
    }
}
